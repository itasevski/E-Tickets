@using Microsoft.AspNetCore.Identity
@inject SignInManager<ETickets.Domain.Identity.ETicketsApplicationUser> SignInManager
@inject UserManager<ETickets.Domain.Identity.ETicketsApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark">Hello @User.Identity.Name! (@UserManager.GetUserAsync(User).Result.Role)</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="ShoppingCart" asp-action="Index" title="Shopping cart">My Shopping Cart</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Order" asp-action="Index" title="Orders">My Orders</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Register">Register</a>
        </li>

        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>
